import math

# Расчет построения зубъёв звёздочек

# Данные для расчета Цепь 16B-3
z = 17       # - Количество зубцов
t = 25.4     # - Шаг цепи, мм
Dw = 15.88   # - Диаметр элемента зацепления
b = 17.02    # - Расстояние между внутренними пластинами
h = 24.2     # - Высота цепи
A = 31.88    # - Расстояние между цепями
N = 3        # - Количество рядов звездочки

print()
print("*" * 55)
print("Исходные данные")
print("*" * 55)
print()

print("z =",z,"- Количество зубцов")
print("t =",t,"- Шаг цепи, мм")
print("Dw =",Dw,"- Диаметр элемента зацепления")
print("h =",h,"- Высота цепи")
print("A =",A,"- Расстояние между цепями")
print("N =",N,"- Количество рядов звездочки")

print()
print("*" * 55)
print("Расчет")
print("*" * 55)
print()
# Расчет

y = t/Dw  # Геометрическая характеристика зацепления
print("y =", y, " - Геометрическая характеристика зацепления")

def K(x):             #Функция подсчета коэ-та К
    if 1.4<= x <=1.5:
        K = 0.48
        return K
    if 1.5<= x <=1.6:
        K = 0.532
        return K
    if 1.6<= x <=1.7:
        K = 0.555
        return K
    if 1.7<= x <=1.8:
        K = 0.575
        return K
    if 1.8<= x <=2:
        K = 0.565
        return K
    
K = K(y) # - Коэффициент высоты зуба
print("K =",K ," - Коэффициент высоты зуба")

yy = 180/z
De = t*(K+1/math.tan(yy/180*math.pi)) # Диаметр окружности выступов
print("De =",De, " - Диаметр окружности выступов")

dd = t/math.sin(yy/180*math.pi)    # Диаметр делительной окружности
print("dd =",dd, " - Диаметр делительной окружности")

r = 0.5025*Dw + 0.05 # Радиус впадины
print("r =",r," - Радиус впадины")

Di = dd - 2*r        # Диаметр окружности впадин
print("Di =",Di, " - Диаметр окружности впадин, мм")

r1 = 0.8* Dw + r     # Радиус сопряжения
print("r1 =",r1, " - Радиус сопряжения")

print()

lfa = 55-60/z        # Половина угла впадины
print("lfa =",lfa, " - Половина угла впадины")

bet = 18-56/z        # Угол сопряжения
print("bet =",bet, " - Угол сопряжения")

gam = 17-64/z        # Половина угла зуба
print("gam =",gam, " - Половина угла зуба")

print()

r2 = Dw*(1.24*math.cos(gam/180*math.pi)+0.8*math.cos(bet/180*math.pi)-1.3025)-0.05 # Радиус головки зуба
print("r2 =",r2, " - Радиус головки зуба")

FC = Dw*(1.24*math.sin(gam/180*math.pi)-0.8*math.sin(bet/180*math.pi)) # Прямой участок профиля
print("FC =",FC, " - Прямой участок профиля")

OO2 = 1.24 * Dw # - Расстояние от центра дуги впадины до цента дуги головки зуба
print("OO2 =",OO2, " - Расстояние от центра дуги впадины до цента дуги головки зуба")

e = 0.03 * t    # - Смещение центров дуг впадин
print("e =",e, " - Смещение центров дуг впадин")
print("e/2 =",e/2, " - Смещение центров дуг впадин пополам")

print()

O1x1 = 0.8*Dw* math.sin(lfa/180*math.pi) # Координаты точки O1
print("O1x1 =",O1x1, " - Координаты точки O1")

O1y1 = 0.8*Dw* math.cos(lfa/180*math.pi) # Координаты точки O1
print("O1y1 =",O1y1, " - Координаты точки O1")

O2x1 = 1.24*Dw*math.cos(180/z/180*math.pi) # Координаты точки O2
print("O2x1 =",O2x1, " - Координаты точки O2")

O2y1 = 1.24*Dw*math.sin(180/z/180*math.pi) # Координаты точки O2
print("O2y1 =",O2y1, " - Координаты точки O2")

print()
print("*" * 55)
print("Расчет зубъев и венцов звездочек в поперечном сечении")
print("*" * 55)
print()

r3 = 1.7 * Dw   # Радиус закругления зуба(наименьший)
print("r3 =", r3," - Радиус закругления зуба(наименьший)")

h3 = 0.8 * Dw   # Расстояние от вершины зуба до линии центров дуг закругления
print("h3 =",h3," - Расстояние от вершины зуба до линии центров дуг закругления")

Dc = t*1/math.tan(180/z/180*math.pi)-1.3*h # Диаметр обода наибольший
print("Dc =", Dc," - Диаметр обода наибольший")

def r4(c):
    if c<=35:
        r4 = 1.6
        return r4
    else:
        r4 = 2.5
        return r4

r4 = r4(t)          # Радиус закругления
print("r4 =", r4," - Радиус закругления")

def bn(N):
    if N == 1:
        b1 = 0.93*b-0.15
        return b1
    if 2 <= N <= 3:
        b2 = 0.9*b-0.15
        return b2
    if N >= 3:
        bn = 0.86*b - 0.3
        return bn

bn = bn(N)  # Щирина зуба звездочки
print("bn =",bn, " - Щирина зуба звездочки")

Bn = (N-1)*A+bn  # Ширина венца многорядной звездочки
print("Bn =",Bn, " - Ширина венца многорядной звездочки" )

